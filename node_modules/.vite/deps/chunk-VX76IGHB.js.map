{
  "version": 3,
  "sources": ["browser-external:assert", "../../@zero65tech/object/src/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"assert\" has been externalized for browser compatibility. Cannot access \"assert.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "const assert = require('assert');\nconst _ = require('lodash');\n\n\n\nexports.from = (objArr, key) => {\n  return objArr.reduce((map, obj) => { map[obj[key]] = obj; return map; }, {});\n}\n\n\n\nexports.nav = (obj, path, fn, ret = {}, ...params) => {\n  \n  if(!path.length)\n    return fn(...params, obj, ret);\n  \n  if(typeof obj != 'object')\n    return;\n\n  let keys = Object.keys(obj);\n  if(typeof path[0] == 'string')\n    keys = keys.filter(key => key == path[0]);\n  else\n    keys = keys.filter(key => key.match(path[0]));\n\n  keys.forEach(key => exports.nav(obj[key], path.slice(1), fn, ret, ...params, key));\n\n  return ret;\n\n}\n\n\n\nexports.trim = (obj) => {\n  for(let [ key, value ] of Object.entries(obj)) {\n\n    if(typeof value != 'object') {\n\n      if(value === undefined || value === '' || value === 0)\n        delete obj[key];\n\n    } else if(value === null) {\n\n      delete obj[key];\n\n    } else if(value instanceof Array) {\n\n      if(value.length == 0)\n        delete obj[key];\n\n    } else {\n\n      exports.trim(obj[key]);\n\n      if(Object.keys(value).length == 0)\n        delete obj[key];\n\n    }\n\n  }\n}\n\nexports.sort = (obj, sortOrder) => {\n\n  let keys = obj instanceof Array ? obj : Object.keys(obj);\n\n  if(sortOrder)\n    keys.sort((a, b) => a == b ? 0 : (sortOrder.indexOf(a) < sortOrder.indexOf(b) ? -1 : 1));\n  else\n    keys.sort();    \n\n  if(obj instanceof Array)\n    return;\n\n  for(let key of keys) {\n    let temp = obj[key];\n    delete obj[key];\n    obj[key] = temp;\n  }\n\n  return obj; // TODO: Remove\n\n}\n\nexports.sortDeep = (obj, ...sortOrders) => {\n\n  if(!sortOrders.length)\n    return obj;\n\n  let sortOrder = sortOrders[0];\n  sortOrders = sortOrders.slice(1);\n\n  let keys = Object.keys(obj);\n  if(sortOrder)\n    keys.sort((a, b) => a == b ? 0 : (sortOrder.indexOf(a) < sortOrder.indexOf(b) ? -1 : 1));\n  else // if(sortOrder == null)\n    keys.sort();\n\n  let ret = {};\n  for(let key of keys) {\n    if(typeof obj[key] == 'object')\n      ret[key] = exports.sortDeep(obj[key], ...sortOrders);\n    else\n      ret[key] = obj[key];\n  }\n\n  return ret;\n\n}\n\n\n\nexports.sum = (obj) => {\n\n  let values = obj instanceof Array ? obj : Object.values(obj);\n\n  return values.reduce((sum, val) => {\n    if(typeof val == 'number')\n      return sum + val;\n    else if(val === undefined || val === null)\n      return sum;\n    else\n      return sum + exports.sum(val);\n  }, 0);\n\n}\n\nexports.add = (object, ...sources) => {\n\n  object = _.cloneDeep(object);\n\n  _.mergeWith(object, ...sources, (val1, val2) => {\n\n    if(typeof val1 === 'object' && typeof val2 === 'object')\n      return undefined;\n\n    if(val1 === undefined || val1 === null)\n      return val2;\n\n    if(val2 === undefined || val2 === null)\n      return val1;\n\n    return val1 + val2;\n\n  });\n\n  return object;\n\n}\n\nexports.subtract = (object, ...sources) => {\n\n  object = _.cloneDeep(object);\n\n  _.mergeWith(object, ...sources, (val1, val2) => {\n\n    if(typeof val1 === 'object' || typeof val2 === 'object')\n      return undefined;\n\n    if(val1 === undefined || val1 === null)\n      return -val2;\n\n    if(val2 === undefined || val2 === null)\n      return val1;\n\n    return val1 - val2;\n\n  });\n\n  return object;\n\n}\n\n\n\nexports.addAt = (object, path, value) => {\n  _.update(object, path, node => (node || 0) + value);\n}\n\nexports.pushAt = (object, path, value) => {\n  _.update(object, path, node => {\n    node = node || [];\n    node.push(value);\n    return node;\n  });\n}\n\nexports.updateAll = (obj, path, fn) => {\n  \n  if(typeof obj != 'object')\n    return;\n\n  let keys = Object.keys(obj);\n  if(typeof path[0] == 'string')\n    keys = keys.filter(key => key == path[0]);\n  else\n    keys = keys.filter(key => key.match(path[0]));\n\n  if(path.length > 1)\n    keys.forEach(key => exports.updateAll(obj[key], path.slice(1), fn));\n  else\n    keys.forEach(key => obj[key] = fn(obj[key]));\n\n}\n"],
  "mappings": "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",
  "names": []
}
