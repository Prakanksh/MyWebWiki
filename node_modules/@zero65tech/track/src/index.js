const _ = require('lodash');
const Obj = require('@zero65tech/object');



exports.bookId = (name) => {
  return '#' + name;
}

exports.headId = (name) => {
  name = name.replaceAll(' · ', '#');
  name = name.replaceAll(' ', '-');
  return '#' + name;
}

exports.tagId = (name) => {
  name = name.replaceAll(' · ', '#');
  name = name.replaceAll(' ', '-');
  return '#' + name;
}

exports.sourceId = (name) => {
  return '#' + name;
}

exports.folderId = (path) => {
  path = path.substring(0, path.length - 5);
  path = path.replaceAll('/', '-');
  path = path.toLowerCase();
  return '#' + path;
}



exports.types = [

  { id:'credit',   name:'Credit'   },
  { id:'debit',    name:'Debit'    },
  { id:'income',   name:'Income'   },
  { id:'expense',  name:'Expense'  },
  { id:'refund',   name:'Refund'   },
  { id:'tax',      name:'Tax'      },

  { id:'relocate', name:'Relocate' },

  { id:'payment',  name:'Payment'  },
  { id:'receipt',  name:'Receipt'  },

  { id:'transfer', name:'Transfer' },

];



exports.seq = () => { 
  return Math.round((Date.now() - new Date('2024-04-01 GMT').getTime())/1000);
}



exports.summary = (entryGroups) => {

  let summary = {};

  for(let entryGroup of entryGroups) {
    for(let entry of entryGroup.entries) {

      if(entry.bookId) {
        let amount = entry.amount;
        if(entry.type == 'debit' || entry.type == 'expense' || entry.type == 'tax')
          amount = -amount;
        Obj.addAt(summary, [ 'books', entry.bookId, entry.date.substring(0,7), entry.type, entry.tagId, entry.headId ], amount);
      } else if(entry.type == 'relocate') {
        Obj.addAt(summary, [ 'books', entry.bookToId,   entry.date.substring(0,7), entry.type, entry.bookFromId ],  entry.amount);
        Obj.addAt(summary, [ 'books', entry.bookFromId, entry.date.substring(0,7), entry.type, entry.bookToId   ], -entry.amount);
      }

      if(entry.sourceId) {
        let amount = entry.amount;
        if(entry.type == 'debit' || entry.type == 'expense' || entry.type == 'tax' || entry.type == 'payment')
          amount = -amount;
        Obj.addAt(summary, [ 'sources', entry.sourceId, entry.date.substring(0,7) ], amount);
      } else if(entry.type == 'transfer') {
        Obj.addAt(summary, [ 'sources', entry.sourceToId,   entry.date.substring(0,7) ],  entry.amount);
        Obj.addAt(summary, [ 'sources', entry.sourceFromId, entry.date.substring(0,7) ], -entry.amount);
      }

    }
  }

  return summary;

}
